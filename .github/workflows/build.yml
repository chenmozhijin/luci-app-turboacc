name: Build luci-app-turboacc

on:
  workflow_dispatch:
  push:
    branches:
      - luci
    paths:
      - '.github/**'
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: 清理空间
        run:  |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /etc/mysql /etc/php
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo -E apt update
          sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* moby* snap*

      - name: 安装编译依赖
        run: |
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo -E apt update
          sudo -E apt -y full-upgrade
          sudo apt install -y ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils clang g++ python3-distutils rsync unzip zlib1g-dev wget
          sudo -E systemctl daemon-reload 
          sudo -E apt -y autoremove --purge
          sudo -E apt clean
          sudo timedatectl set-timezone "Asia/Shanghai"

      - name: 下载SDK
        run: |
          url=https://downloads.openwrt.org/releases/22.03.5/targets/x86/64/openwrt-sdk-22.03.5-x86-64_gcc-11.2.0_musl.Linux-x86_64.tar.xz
          wget -O openwrt.tar.xz $url
          tar xvf openwrt.tar.xz
          mv $(basename $url | awk -F '.tar.xz' '{ print $1 }') openwrt
          cd openwrt
          export OPENWRT_ROOT_PATH="$(pwd)"
          echo "OPENWRT_ROOT_PATH=$OPENWRT_ROOT_PATH" >> $GITHUB_ENV

      - name: 将存储库签出到运行器
        uses: actions/checkout@v3
        with:
          path: ${{ env.OPENWRT_ROOT_PATH }}/package/

      - name: 更新 feeds 
        working-directory: ${{ env.OPENWRT_ROOT_PATH }}
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          

      - name: 加载自定义配置并生成配置文件
        working-directory: ${{ env.OPENWRT_ROOT_PATH }}
        run: |
          echo "CONFIG_TARGET_x86=y" >> $OPENWRT_ROOT_PATH/.config
          echo "CONFIG_TARGET_x86_64=y" >> $OPENWRT_ROOT_PATH/.config
          echo "CONFIG_TARGET_x86_64_DEVICE_generic=y" >> $OPENWRT_ROOT_PATH/.config
          echo 'CONFIG_PACKAGE_luci-app-turboacc=m' > .config
          echo 'CONFIG_PACKAGE_luci-app-turboacc_INCLUDE_OFFLOADING=y' > .config
          echo 'CONFIG_PACKAGE_luci-app-turboacc_INCLUDE_SHORTCUT_FE=n' > .config
          echo 'CONFIG_PACKAGE_luci-app-turboacc_INCLUDE_SHORTCUT_FE_CM=n' > .config
          echo 'CONFIG_PACKAGE_luci-app-turboacc_INCLUDE_BBR_CCA=y' > .config
          ./scripts/diffconfig.sh

      - name: 编译
        working-directory:  ${{ env.CMZJ_PACKAGE_ROOT_PATH }}
        run: |
          make package/luci-app-turboacc/compile -j$(nproc) || make package/luci-app-turboacc/compile -j1 V=sc

      - name: 准备 artifact
        working-directory: ${{ env.OPENWRT_ROOT_PATH }}
        run: |
          mkdir -p ./artifact
          cp -rf $(find ./bin/packages/ -type f -name "luci-app-turboacc*.ipk") ./artifact

      - name: 上传build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: luci-app-turboacc
          path: ${{ github.workspace }}/artifact/**
