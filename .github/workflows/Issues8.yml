name: 测试Issues#8
on:
    workflow_dispatch:
permissions:
    contents: write
    discussions: write
jobs:
    build:
        runs-on: ubuntu-20.04
        strategy:
            fail-fast: false
            max-parallel: 8
            matrix:
              compile: [dnsmasq,dnsmasq-full]
        steps:
          - name: build
            run: |
                git clone https://github.com/openwrt/openwrt -b openwrt-22.03
                cd openwrt
                if [ "${{ matrix.compile }}" = "dnsmasq-full" ] ; then
                    echo "${{ matrix.compile }}"
                    sed -i 's/^	dnsmasq \\$/	dnsmasq-full \\/g' ./include/target.mk
                else
                    echo "${{ matrix.compile }}"
                fi
                mkdir -p turboacc_tmp ./package/turboacc
                cd turboacc_tmp 
                git clone https://github.com/chenmozhijin/turboacc -b package
                cd ../package/turboacc
                git clone https://github.com/fullcone-nat-nftables/nft-fullcone
                git clone https://github.com/chenmozhijin/turboacc
                mv ./turboacc/luci-app-turboacc ./luci-app-turboacc
                rm -rf ./turboacc
                cd ../..
                cp -f turboacc_tmp/turboacc/hack-5.10/952-net-conntrack-events-support-multiple-registrant.patch ./target/linux/generic/hack-5.10/952-net-conntrack-events-support-multiple-registrant.patch
                cp -f turboacc_tmp/turboacc/hack-5.10/953-net-patch-linux-kernel-to-support-shortcut-fe.patch ./target/linux/generic/hack-5.10/953-net-patch-linux-kernel-to-support-shortcut-fe.patch
                cp -f turboacc_tmp/turboacc/pending-5.10/613-netfilter_optional_tcp_window_check.patch ./target/linux/generic/hack-5.10/613-netfilter_optional_tcp_window_check.patch
                rm -rf ./package/libs/libnftnl ./package/network/config/firewall4 ./package/network/utils/nftables
                mkdir -p ./package/network/config/firewall4 ./package/libs/libnftnl ./package/network/utils/nftables
                cp -r ./turboacc_tmp/turboacc/shortcut-fe ./package/turboacc
                cp -RT ./turboacc_tmp/turboacc/firewall4-$(grep -o 'FIREWALL4_VERSION=.*' ./turboacc_tmp/turboacc/version | cut -d '=' -f 2)/firewall4 ./package/network/config/firewall4
                cp -RT ./turboacc_tmp/turboacc/libnftnl-$(grep -o 'LIBNFTNL_VERSION=.*' ./turboacc_tmp/turboacc/version | cut -d '=' -f 2)/libnftnl ./package/libs/libnftnl
                cp -RT ./turboacc_tmp/turboacc/nftables-$(grep -o 'NFTABLES_VERSION=.*' ./turboacc_tmp/turboacc/version | cut -d '=' -f 2)/nftables ./package/network/utils/nftables
                rm -rf turboacc_tmp
                echo "# CONFIG_NF_CONNTRACK_CHAIN_EVENTS is not set" >> target/linux/generic/config-5.10
                echo "# CONFIG_SHORTCUT_FE is not set" >> target/linux/generic/config-5.10
                ./scripts/feeds update -a
                ./scripts/feeds install -a
                echo "CONFIG_TARGET_x86=y" >> .config
                echo "CONFIG_TARGET_x86_64=y" >> .config
                echo "CONFIG_TARGET_x86_64_DEVICE_generic=y" >> .config
                echo 'CONFIG_PACKAGE_luci-app-turboacc=y' >> .config
                make defconfig
                echo "diffconfig"
                ./scripts/diffconfig.sh
                make download -j16
                find dl -size -1024c -exec ls -l {} \;
                find dl -size -1024c -exec rm -f {} \;
                make download -j16 || make download -j1 V=s
                make -j $(($(nproc)+1))

                
          - name: 上传 Image Builder
            uses: actions/upload-artifact@v3
            with:
              name: OpenWrt-${{ matrix.compile }}
              path: openwrt/bin/targets/